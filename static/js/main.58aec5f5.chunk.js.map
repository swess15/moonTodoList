{"version":3,"sources":["img_source/letter.png","img_source/Moon_2.png","components/Counter.js","components/TextForm.js","components/TextInfo.js","components/TextInfoList.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Counter","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleIncrease","setState","number","state","handleDecrease","_ref","alert","react_default","a","createElement","src","title","className","alt","Component","TextForm","task","during","handleChange","e","defineProperty","target","name","value","handleSubmit","preventDefault","onCreate","style2","fontSize","fontWeight","textAlign","color","onSubmit","style","marginTop","marginLeft","marginRight","display","width","type","placeholder","onChange","TextInfo","editing","handleRemove","_this$props","info","onRemove","index","handleToggleEdit","_e$target","prevProps","prevState","_this$props2","onUpdate","onClick","_this$props$info","border","padding","margin","backgroundColor","defaultProps","TextInfoList","data","list","map","components_TextInfo","key","console","warn","App","information","handleCreate","log","concat","objectSpread","filter","handleUpdate","components_Counter","moon","components_TextForm","components_TextInfoList","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.58aec5f5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/letter.49024fe3.png\";","module.exports = __webpack_public_path__ + \"static/media/Moon_2.2cb4b3a7.png\";","import React, { Component } from 'react';\r\nimport title from '../img_source/letter.png';\r\n\r\nclass Counter extends Component {\r\n    /*\r\n    state = {\r\n        number: 0\r\n    }\r\n    */\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            number : 0\r\n        }\r\n    }\r\n\r\n    handleIncrease = () => {\r\n        this.setState({\r\n            number: this.state.number + 1\r\n        });\r\n    }\r\n\r\n    handleDecrease = () => {\r\n        this.setState(\r\n            ({ number }) => ({ number: number -1 })\r\n        );\r\n        alert(\"minus\");\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <img src={title} className=\"titleimg\" alt=\"titleimg\" />\r\n                {/*\r\n                <h1>月내 할일</h1>\r\n                <div>중요도: {this.state.number}</div>\r\n                <button onClick={this.handleIncrease} className=\"btn\">+</button>\r\n                <button onClick={this.handleDecrease} className=\"btn\">-</button>\r\n                */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Counter;","import React, { Component } from 'react';\r\n\r\nclass TextForm extends Component {\r\n    state = {\r\n        task: '',\r\n        during: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n    handleSubmit = (e) => {\r\n        // 페이지 리로딩 방지\r\n        e.preventDefault();\r\n        // 상태값을 onCreate 를 통하여 부모에게 전달\r\n        this.props.onCreate(this.state);\r\n        // 상태 초기화\r\n        this.setState({\r\n            task: '',\r\n            during: ''\r\n        })\r\n    }\r\n    render() {\r\n        const style = {\r\n            fontSize: '35px',\r\n            fontWeight: 'bold',\r\n            textAlign: 'center',\r\n            color: 'rgba(144, 255, 144, 0.8)'\r\n        };\r\n\r\n        const style2 = {\r\n            fontSize: '35px',\r\n            fontWeight: 'bold',\r\n            textAlign: 'center',\r\n            color: '#4ef3dd9c'\r\n        };\r\n\r\n        const content = {\r\n            marginTop: '40%',\r\n            marginLeft: '36%',\r\n            marginRight: 'auto',\r\n            display: 'block',\r\n            width: '500px',\r\n            \r\n        }\r\n\r\n        return(\r\n            <form onSubmit={this.handleSubmit}>  \r\n                    <div style={content}>\r\n                        <div className=\"textbox\">\r\n                            <input type=\"text\" placeholder=\"할 일\" value={this.state.task} onChange={this.handleChange} name=\"task\" className=\"taskText\" /> \r\n                            <input type=\"number\" placeholder=\"며칠 간?\" value={this.state.during} onChange={this.handleChange} name=\"during\" className=\"duringText\" />\r\n                            <input type=\"submit\" value=\"등록\" />\r\n                        </div>\r\n                        <hr/>\r\n                        <div style={ style }><span style={style2}>{this.state.task}</span>를(을) <span style={style2}>{this.state.during}</span>일 안에 해낸다!</div>\r\n                    </div>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TextForm;","import React, { Component } from 'react';\r\n\r\nclass TextInfo extends Component {\r\n    static defaultProps = {\r\n        info: {\r\n            task: '할 일',\r\n            during: '결산 기간',\r\n            index: 0\r\n        }\r\n    }\r\n\r\n    state = {\r\n        editing: false,\r\n        task: '',\r\n        during: ''\r\n    }\r\n\r\n    handleRemove = () => {\r\n        const { info, onRemove } = this.props;\r\n        onRemove(info.index);\r\n    }\r\n\r\n    handleToggleEdit = () => {\r\n        const { editing } = this.state;\r\n        this.setState({ editing: !editing });\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        const { info, onUpdate } = this.props;\r\n        if(!prevState.editing && this.state.editing) {\r\n            this.setState({\r\n                task: info.task,\r\n                during: info.during\r\n            });\r\n        }\r\n\r\n        if(prevState.editing && !this.state.editing) {\r\n            onUpdate(info.index, {\r\n                task: this.state.task,\r\n                during: this.state.during\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const style = {\r\n            color: 'white',\r\n            border: '5px outset slategray',\r\n            padding: '8px',\r\n            margin: '8px'\r\n        };\r\n\r\n        const textstyle = {\r\n            color: 'white',\r\n            backgroundColor: 'black'\r\n        }\r\n\r\n        const { editing } = this.state;\r\n\r\n        if (editing) {\r\n            return(\r\n                <div>\r\n                    <div>\r\n                        <input value={this.state.task} name=\"task\" placeholder=\"할 일\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div>\r\n                        <input value={this.state.during} name=\"during\" placeholder=\"수행 기간\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <button onClick={this.handleToggleEdit}>적용</button>\r\n                    <button onClick={this.handleRemove}>삭제</button>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        // 일반 모드\r\n        const {\r\n            task, during, index\r\n        } = this.props.info;\r\n\r\n        return(\r\n            <div style={ style }>\r\n                <div><i>*{index + 1}. *</i></div>\r\n                <div><b style={ textstyle }>{task}</b>를(을)</div>\r\n                <div><b>{during}</b>일 안에 해낸다!</div>\r\n                <button onClick={this.handleToggleEdit}>수정</button>\r\n                <button onClick={this.handleRemove}>삭제</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TextInfo;","import React, { Component } from 'react';\r\nimport TextInfo from './TextInfo'\r\n\r\nclass TextInfoList extends Component {\r\n    static defaultProps = {\r\n        list: [],\r\n        onRemove: () => console.warn('onRemove not defined'),\r\n        onUpdate: () => console.warn('onUpdate not defined')\r\n    }\r\n\r\n    render() {\r\n        const { data, onRemove, onUpdate } = this.props;\r\n        const list = data.map(\r\n            info => (<TextInfo key={info.index} info={info} onRemove={onRemove} onUpdate={onUpdate}/>)\r\n        );\r\n        return(\r\n            <div>\r\n                {list}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TextInfoList;","import React, { Component } from 'react';\nimport Counter from './components/Counter';\nimport TextForm from './components/TextForm';\nimport TextInfoList from './components/TextInfoList';\nimport moon from './img_source/Moon_2.png';\n\nclass App extends Component {\n  index = 2\n  state = {\n    information: [\n      {\n        index: 0,\n        task: '시험 준비',\n        during: '5'\n      },\n      {\n        index: 1,\n        task: '알바 마무리',\n        during: '3'\n      }\n    ]\n  }\n  handleCreate = (data) => {\n    const { information } = this.state;\n    console.log(data);\n    this.setState({\n      information: information.concat({ index: this.index++, ...data })\n    })\n  }\n  handleRemove = (index) => {\n    const { information } = this.state;\n    this.setState({\n      information: information.filter(info => info.index !== index)\n    })\n  }\n  handleUpdate = (index, data) => {\n    const { information } = this.state;\n    this.setState({\n      information: information.map(\n        info => index === info.index ? {...info, ...data} : info\n      )\n    })\n  }\n  render() {\n    return (\n      <div className=\"wrap\">\n        <Counter />\n        <img src={moon} className=\"moonimg\" alt=\"moon\" />\n        <TextForm onCreate={this.handleCreate} />\n        <TextInfoList data={this.state.information} onRemove={this.handleRemove} onUpdate={this.handleUpdate} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}